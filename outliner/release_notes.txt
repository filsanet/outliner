1.8.7 - ???
	License Change:
		1) Switched to a BSD license.
		2) We are now building our own jmousewheel.jar library. Code separation is much cleaner so that there is now only a "uses" relationship between outliner.jar and jmousewheel.jar. This should make things compatible between the use of a BSD license for outliner.jar and the LGPL for jmousewheel.jar.
	New Features:
		1) Support for multiple File Protocols added.
			a) Implemented LocalFileSystemFileProtocol for opening/saving/exporting to the local filesystem.
			b) Implemented WebFilePHPFileProtocol for opening/saving/exporting to Steven Spencer's PHP based remote file storage system. The WebFile code is now contained in it's own jar: com.yearahead.io.webfile.jar.
	Enhanced Features:
		1) Autosave agent frequency can now be set from the misc panel.
		2) Added a "ding" when a search/replace finds no matches.
	Bug Fixes:
		1) Fixed a bug where new documents would often have the text area hidden until the next redraw.
	Notes:
		1) If you have a previous version of JOE on your system you will probably need to manually copy the updated autosave agent script from "<install_dir>/prefs/scripts/Autosave Agent.txt" to "<user_home>/outliner/scripts/Autosave Agent.txt". If you don't do this it just means the autosave agent won't work.
		2) The sources for com.organic.maynard.jar have been put in CVS. Xerces.jar is required to compile com.organic.maynard.jar, but I'm leaving it out of the builds because it is very large (1.7M) and is not used by JOE. I will check in the license and a copy the copy of xerces.jar I'm currently using, so you can download it from CVS or instead get it directly from Apache: http://xml.apache.org/xerces-j/index.html. I'm currently using xerces 1.4.3, but any recent release should be fine.
		3) We've updated the way the recent files list works, so your current recent files will get blown away if you use the new version.
1.8.6.1 - 10/20/01
	Bug Fixes:
		1) Fixed bug #472934, where macros applied to node selections were not working.
1.8.6 - 10/19/01
	Bug Fixes:
		1) Fixed bug #465943 where windows would scroll to the top when the window was resized, loses focus, etc.
		2) It's no longer possible to cause the main outliner window to be loaded offscreen by manually editing config.txt and setting large or negative values.
		3) Added a PlatformCompatibility class which wraps platform/java version specific code. This fixes the issue with OutlinerScrollBarUI causing startup to barf on MacOSX.
		4) Re-fixed bug #458868 which was about text selection not being registered for macro use.
		5) Fixed the way preference panels are loaded so that a tree heirarchy of panels can be created.
	Feature Enhancements:
		1) Added a new preference for mouse wheel speed to the misc preferences panel. Now you can scroll faster if you need more speed in your life.
		2) Added file export functionality.
			Added export a selection.
			Added a simple HTML export as an example of how these might work.
			Added a justified plaintext export format. These release notes are now output using this format. Added prefs to control the column width and if lines are drawn.
	Notes:
		1) Added a shell script for Unix, run_joe.sh. Thanks to tswoam for providing the script.
1.8.5 - 09/21/01
	Bug Fixes:
		1) If you select the first child node and then select another sibling node, doing a select all wouldn't work right. Now it does.
		2) Fixed bug #458868 where double clicking to select a word wouldn't actually get recorded internal to the app, even though visually it looked OK. This would cause macros not to apply themselves to the correct selection.
		3) Fixed bug with go to line where the view wasn't jumping to a node that was not currently on screen.
		4) Fixed a Stack Overflow issue with line numbers. The moral, recursive methods elegant, but bad if they're going to recurse thousands of times.
		5) Fixed a bug with delete where the current node to draw from would not get hidden initially when you deleted the current node to draw from.
	Feature Enhancements:
		1) Performance improvements.
		2) Added Scripts Manager. You can now create scripts and run them in their own thread of execution. Basic facilities for monitoring and managing these threads is also included. I implemented an auto-save agent as an example script. Scripts can also be designated as startup or shutdown scripts.
		3) Added mouse wheel support for windows. Thanks to the JMouseWheel project on SourceForge: http://sourceforge.net/projects/jmousewheel/.
	Notes:
		1) The windows mousewheel code also apparently relies on a MSVCP60.dll file. This seems to be included by default under Win2k, but isn't for 95/98/NT. You can download this dll off the net. It's about 393k. You'll know you need it if you get a windows dialog at startup bitching about not being able to find this. If you choose not to get the dll things will still work ok, but you won't have the mousewheel support, and you'll have to deal with the annoying dialog's on startup. I'll post the dll at http://outliner.sourceforge.net/MSVCP60.dll so you don't need to hunt for it.
1.8.4 - 09/04/01
	Bug Fixes:
		1) Fixed a bug where changing the name of a macro during an "update macro" operation would not delete the old macro from the file system.
		2) When you had a set of nodes selected and you typed a few characters quickly they would not all get sent to the youngest node in the selection. This was a result of the youngest node not being set as the current editing node.
		3) Added alpha-numeric validation to attribute key in the new attribute dialog. If a non XML compliant key was used it would make the OPML unparseable and thus unreadable.
		4) Fixed a bug where doing a find/replace with start at top selected would not search over the decendants of the last child of root.
		5) The installation code now copies macros files one by one. If an existing macros.txt file exists then lines for any new macros are now appended. Prior to this, people who were installing over old builds wouldn't get any new macros that were added unless they copied them manually.
		6) Added validation for macro names so that a user can't create a name that would be an invalid filename. Prior to this you could get an exception and then your macros.txt file would be out of sync with the filesystem.
	New Featurs:
		1) Added sorting macros. These show up in the macro popup under "sort". These are implemented in BSH so you can easily roll your own.
		2) Added document attributes. Now you can store arbitrary document level data via attributes. These will be saved/loaded when you use OPML as your file format.
		3) Added regular expression support to Find/Replace via Apache's jakarta-oro package.
		4) You can now save Find/Replace items.
	Feature Enhancements:
		1) The XML-RPC Macro now uses a single URL rather than server and port. This will allow for more flexibility in connecting to a server. However, this breaks any existing XML-RPC Macros. You will need to update any existing macros with the appropriate URL before using them.
		2) More enhancements to the XML-RPC macro. Now you can put the body of the XML-RPC call within the macro. The current selection can be passed in and will substitute itself for {$value}. Inline replacement is improved. Return values now convey the correct heirarchy of <struct> and <array>.
		3) Finished pulling out all the text from the GUI into the gui_tree.xml file. Now it is possible to do the multiple language thing in a more comprehensive manner.
		4) Made the macro popup menu only work if you click on a selected node or the current node you're editing. This should make it's behaviour a little more intuitive.
1.8.3 - 08/21/01
	Bug Fixes:
		1) Fixed a bug where if you set the undo queue size to zero documents would no longer change their file modified state when you edited them.
		2) It was possible by double-clicking to launch the color chooser twice when picking new colors from the look and feel prefs panel. This is now blocked in a hacky way, but it's better than nothing.
		3) Fixed a bug where the indicators where not hidden for new docs even though the prefs indicated that they should be. This also fixed a similar problem with line number visibility.
		4) Fixed a bug where the first level nodes where not exported to the system clipboard when doing copy/cut.
		5) Fixed a bug where copy/cut wouldn't export anything to the system clipboard under Java 1.3.1. Note: copy/paste of objects internally had to be turned off to make the export stuff work. If both object copy/paste and system clipboard support are important to you then I recommend using Java 1.3.0 which doesn't seem to have this problem.
		6) Fixed a bug that could cause the document window to jump upwards unexpectedly when you clicked on a node at or near the bottom of the view.
	New Features:
		1) Added BeanShell (BSH) macro support.
		2) Also added a new "script" menu. The macros editor now lives under it as well as a few new commands, "Run as Bean Shell Script", and "Bean Shell Console".
		3) Added 3 new prefs to both the global and document level prefs. These are "apply font style for comments", "apply font style for editability" and "apply font style for moveability". This will allow you to create a document that is read-only/locked, etc. but looks like a normal doc, thus making it easier to read.
	Feature Enhancements:
		1) Made the children ArrayList of NodeImpl use lazy instantiation. This saves memory and makes a pretty big difference for large sparse outlines. After the change I was able to open a 250,000 line outliner where before I could only open about 150,000 lines.
		2) Document Preferences now displays the creation and modification dates for a document. The document level prefs are now in a JScrollPane and the JDialog is resizeable.
		3) OPMLs now indent the outline elements. The comment/editable/moveable atttributes are now only stored for the key nodes where inheritance changes. This reduces the size of the OPML doc when it's saved.
		4) Turned several windows into JDialogs and made them minimally configurable from gui_tree.xml. The windows include: MacroManager, Application Preferences, Document Preferences, Find/Replace, MacroEditor, Document Statistics. Also, these all have a common base class so behavior can be managed more consistently.
		5) Added a read-only node option to Find/Replace and in the process reconfigured the GUI layout. Also fixed the focus when you find a match.
		6) Rewrote the "goto" dialog. It now supports column numbers as well as line numbers.
	Notes:
		1) The xmlrpc.jar file has been replaced with helma.xmlrpc.jar file. This is a much newer code base for the helma.xmlrpc package. I was also able to incorporate the changes from MyXmlRpcClient.jar directly into the package since I built it from the src.
		2) Changed the frame icon so that JOE is easier to tell apart from other apps in the taskbar.
1.8.2 - 08/13/01
	New Features:
		1) Comments have been completely re-written.
		2) Read-Only node support added.
		3) Immoveable node support added.
		4) Help Menu added.
	Bug Fixes:
		1) Fixed a bug that could cause the find/macro/prefs internal frames to be inaccessible when in maximized mode. Now all internal frame windows will move to your current viewport location if they are completely outside the current viewport when you activate them.
		2) Fixed bug #448976 where copy/paste between outliner docs was broken.
		3) Fixed a bug where line numbers would get out of sync. This was caused by the cloneClean method of NodeImpl. Apparently the parent of the cloned node was being set to the old uncloned parent causing the counts to be off.
		4) Fixed a node drag and drop bug, where it was possible to make a node the first child of itself which makes no sense, so would cause an infinite loop and a hard crash.
	Feature Enhancements:
		1) Made the Preferences Frame an InternalFrame.
		2) Made sure DocumentSettings JDialog, New Attribute JDialog and Statistics JDialog are centered on the Outliner window.
	Notes:
		1) The gui_tree.es.xml and gui_tree.ja.xml are no longer in sync with the gui_tree.en.xml. This WILL cause the app not to run if you try to startup with the spanish or japanese gui tree.
		2) Commented state is no longer stored for recent files. This is now totally reliant on the file format supporting comments.
1.8.1 - 08/04/01
	Enhanced Features:
		1) Now the GUI tree also does the labels, textfields, combo boxes, etc. in the preference panels.
		2) Cleaned up the startup console spewage a bit.
		3) The main window now remembers it's size and location between sessions.
		4) Copy/Cut/Paste now supports objects internally while still maintaining StringSelection compatibility with the outside world. This allows attributes to be pasted along with the node when nodes are copied or cut. This also preserves comment state as well.
		5) Added supportsAttributes() method to SaveFileFormat interface. Now the user is warned if the file format does not support saving attributes.
	New Features:
		1) Added the first visible beginnings of multiple language support. The command line now takes a language arg which controls which gui_tree.xml file is loaded. For japanese it is also important to set the locale. This has been REMed out in the batch files, but is there as an example. 
			The gui_tree.en.xml is the version I will make sure is kept up to date. I added a gui_tree.en.xml (Spanish) with a few babelfish translations to make sure it works. 
			I also added a gui_tree.ja.xml to see if I could get japanese working. It too has a few babelfish translations just to see that it works. 
			Apparently there are issues with win2k and CJK support as it relates to java. From what I've read on the bug parade it seems that if you set the current and default locales in your system settings you will be able to edit text, otherwise the IME text entry thingy doesn't work. I've been able to copy and paste in though so in principal it works. Also, I've got a Unicode font that supports CJK so that I can see the japanese in the editor.
		2) Some of the icons for displaying node state are now generated programatically. A prototype icon, (closed_node.gif) is loaded, and then the other icons are generated by running image filters on them. It's pretty damn fast since the images are small, so there's almost no hit on startup.
	Notes:
		1) A "dox" directory is now included. This hold's the OPML based documentation that Stanley has been working on.
	Bug Fixes:
		1) Fixed bug where changing the font face/size would not effect new documents.
		2) Somehow I forgot the code that made it possible to add new attributes. This may or may not have been messed up in the last build, but it was definitly messed up in CVS, but now it's fixed.
1.8.0 - 07/26/01
	New Features:
		1) Feature Request #443665. Implemented "Select None" for nodes and textareas.
		2) Feature Request #443665. Implemented "Select Inverse" for nodes.
	Enhanced Features:
		1) Modified backspace/delete for node selections to work consistently as per Stanley Krute's suggestions. Backspace/delete no longer tries to stay in the current node set, but instead works closer to what you would expect in a standard text editor.
		2) You can now add and remove attributes from nodes.
		3) Feature Request #444519. Renamed menus and window titles.
		4) Feature Request #444531. Added a "delete" menuitem.
	Bug Fixes:
		1) Fixed the split pane in the Preferences Panel so that the tree won't get squeezed out. Also made sure that extra space goes to the right panel by default. Also increased the minimum and initial height of the frame by 5 pixels so that the scrollbar will not be neccessary.
		2) Added catch in preferences config file parsing. Now if you have a preference that is no longer used it won't barf and die.
		3) The "copy", "paste" and "select inverse" menu items are now correctly activated/deactived when changing between docuements.
		4) Fixed a bug where focus would not always be set correctly when a draw up had just occurred. This would occur when a user clicked on a nodes button to select it.
		5) I finally realized why I implemented the custome ScrollBarUI. My custom UI lets me update the thumb even when it's being dragged. This stops the jitters that occur with unequally sized nodes.
1.0.7a - 07/20/01
	Notes:
		1) Put all the release notes into one file like they should be.
		2) Started refering to Java Outline Editor as JOE.
	New Features:
		1) You can now view/edit node attributes. Prior to this, attributes were all hidden away. Still need to make new/remove work.
	Enhanced Features:
		1) Backspace/Delete now works "symetrically" for node selections too.
		2) Made the open/save API deal with bytes rather than text so it can really deal with binary formats. Prior to this it still treated everything as text even though encoding was up to the format.
	Bug Fixes:
		1) Bug #441232 where delete was not working correctly.
		2) Fixed a bug where the macros.txt and/or macros where not getging copied into the user's home directory if they already had an installation of JOE.
		3) The OPML file format is more paranoid in it's escaping of XML within attributes. This is for compatibility with Radio Userland which apparently likes the > character to be escaped in attributes.
	Other Changes:
		1) All class definitions have been seperated into their own .java files. This is to make it possible for people to more easily compile the project.
		2) Preferences configuration has now been mostly pulled out into the gui_tree.xml file. This makes it alot easier to add new preferences.
		3) The Application name is now configured from the gui_tree.xml file.
1.0.6b - 07/10/01
	New Features:
		1) Macros are now automatically copied to the user's profile the first time the app is run.
		2) Macros now save themselves. The current macros no longer use .ser files, but instead use their own XML format.
		3) The main class now accepts a command line argument for a file to open. This also makes it possible to setup sendto under windows.
		4) File formats now have extensions mapped to them. Currently this is only used for files opened via the command line arguments.
		5) Node can now store arbitrary Object attributes. This allows the OPML format to parse/store/save any arbitrary attributes an OPML file has.
		6) Open and Save API now leaves encoding up to the format. This will allow support for binary formats if/when they are needed.
	Bug Fixes:
		1) Fixed bug #440079 where save on close was not working.
1.0.6a - 07/02/01
	Notes:
		It's been a while since the last update, I've been busy with work stuff at night, so there's been no time for the outliner. Anyhow, we've got some new code and a few bug fixes. I've probably missed something in the change log since I've been bad and not been writing things down incrementally so I'm sure I've missed somthing.
	New Features:
		1) Feature #432794 Web File System. This is code contributed by Steven Spencer. It allows you to save/open your files from a web server (Apache) that is running an outliner.php component.
		2) Started making the GUI configurable from an XML file. Currently the menubar/menus/menu items can be configured.
	Bug Fixes:
		1) Bug #436983 fixed problem where opening an empty document would cause things to explode.
1.0.5d - 06/12/01
	Notes:
		1) Posted a homepage finally at http://outliner.sourceforge.net.
		2) Added an installation.txt file.
	New Features:
		1) Implemented feature #430031, storing user preferences    under the user's home directory.
	Enhanced Features:
		1) Improved performance of new node inserting.
		2) Improved performance of line number display.
	Bug Fixes:
		1) Fixed #432315, where I basically mangled build 1.0.5c.    This also includes a rewrite of run.bat.
1.0.5c - 06/09/01
	New Features:
		1) Implemented feature #429692. Added a key command to select parent node. HOME and END select the first/last node in a selection. Backspace at the beginning of a leaf node will merge the node with the preceding visible node. Delete at the end of a leaf node will merge the node with the next visible node.
	Enhanced Features:
		1) shift-return no longer toggles between node and text selection. This is now done with the insert key.
	Bug Fixes:
		1) #429983 fixed, where drag and drop would not work under certain circumstances.
		2) #429534 fixed, where start.bat renamed to run.bat, and the script now just calls java, rather than c:\java1.3\bin\java.
1.0.5b - 06/01/01
	Enhanced Features:
		1) Line numbers are now relative to the document, not to the size of the hoist when hoisted.
		2) The warning about the undoqueue being cleared during hoisting/dehoisting will now only show up if your undoqueue has an undoable in it.
	Bug Fixes:
		1) #429092 FIXED. Paste not working in JDK 1.4. This bug should be fixed, but I am unable to verify it since I'm not running JDK 1.4.
		2) #429099 FIXED. When line numbers are off and the app is restarted, space was being taken up by the line numbers even though they were not shown.
		3) #429459 FIXED. Saving a document while hoisted would only save the hoisted part of the document, not the whole thing.
1.0.5a - 05/30/01
	New Features:
		1) Added feature request #424092, hoist/de-hoist.
	Bug Fixes:
		1) Fixed bug #428432 where focus was being left behind when switching windows in maximized mode.
		2) Fixed bug #428433 where the cursor was being hidden when a new document when not in maximized mode.
		3) Fixed bug #428485 where expanded nodes were being commented when a file was opened from the recent file list.
1.0.4b - 05/29/01
	New Features:
		Got a few ideas from looking at tkOutliner which can be found at http://tkoutline.sourceforge.net/ The functions I added are "merge" and "split".
		1) Added "Merge" and "Merge with Spaces" functions. "Merge" combines the text of all selected nodes and their children into the text of the first selected node. "Merge with Spaces" does the same thing, but makes sure there is at least one space character between each of the lines as it does the merge.
		2) Added split at cursor functionality. Use ctrl-return when the cursor is in the text of a node and the line will be split at the cursor with the text after the cursor being inserted as a new line below.
1.0.4a - 05/26/01
	New Features:
		1) A Warning/Confirmation dialog is now activated when a file is modified on open. This situation typically occurs when the source file has an invalid node heirarchy.
		2) Added commenting of nodes as per feature request #426997.
	Bug Fixes:
		1) #426883 regarding textareas not always resizing has been fixed.
1.0.3b - 05/23/01
	New Features:
		1) Added a Document Statistics dialog which shows line count and char count.
		2) Added support for displaying line numbers.
		3) Goto line number dialog is now pre-populated with the current line number.
	Bug Fixes:
		1) Fixed Bug #425858 concerning drag and drop events during deselection.
		2) Fixed Bug #426453 concerning visual junk that shows up when pasting in full nodes.
		3) Fixed Bug #426488 concerning incomplete redraws when using the goto line number menu item. This was fixed by enhancing the redraw so that it fills in nodes in any leftover space at the bottom of the screen during a drawUp().
1.0.3a - 05/21/01
	Notes:
		This release uses an updated rendering algorithm. The new code provides a slight increase in performance, and is easier to understand and debug. However, since the changes are substantial, it is likely that new bugs have been introduced. I've tested the code fairly well, but I'll bet there's something I missed. 
1.0.2d - 05/11/01
	New Features:
		1) Added an explicit destroy() for documents so that they get garbage collected much better. 
		2) I also changed the vm settings to use incremental garbage collection -Xincgc. 
		These two changes seem to dramatically reduce the amount of memory being leaked. From what I've been reading on the BugParade at Javasoft, Swing leaks memory pretty badly with JInternalFrames, but this should drastically reduce it.
	Bug Fixes:
		1) Fixed the bug with the duplicate Mneumonic where prev window and redo were in conflict.
		2) Fixed a few minor bugs but I'm too tired to remember what they were.
1.0.2c - 05/07/01
	New Features:
		1) Revert now uses the DocumentInfo if it is available, to set node exapnsion, vertical scroll location, window size, etc.
		2) Added ownerName, ownerEmail as new Editable document settings.
		3) Added creationDate, modificationDate as hidden document settings.
	Bug Fixes:
		1) The File Chooser dialog is now a child of the main window. This will prevent potential user confusion with focus changes to other applications.
		2) Warning dialogs are now presented when you try to "Save As" over an existing document.
		3) When you try to open a document that is already open, your focus is now updated to the open document after the dialog is closed.
		4) Corrected element content escaping and attribute escaping for the XML used when saving an OPML document.
1.0.2b - 05/05/01
	Notes:
		The openxml-1.2.jar file has been eliminated. I am now using xp.jar since it seems to have fewer bugs.
	New Features:
		1) Added support for opening (Outliner Processor Markup Files) OPML http://www.opml.org/spec. OPML stores the content and state of an outline as an XML document.
		2) Files accessed from the recent file menu will now preserve the expanded state of nodes in the document.
		3) The file chooser will now remember your last directory from session to session.
	Bug Fixes:
		1) Fixed bug where recent file menu was disabled at startup.
1.0.2a - 05/03/01
	Notes:
		This is the first phase of the implementation of a new open/save architecture. 
	New Features:
		1) Window size and position, node expansion state and scrollbar position are now recorded for recent files and restored when you open the file via the recent file menu.
	Bug Fixes:
		1) Fixed a bug with drag and drop where dragging between different depths could cause undo/redo to increase the position of the node by one relative to it's parent.
		2) Fixed a few bugs where document settings were not being preserved.
		3) Fixed the enabled state of the recent file menu when it is empty.
1.0.1 - 04/29/01
	Notes:
		Added back in the copyright comment into the XmlRpc client code.
	Bug Fixes:
		1) Fixed a bug where it was possible to drag/resize windows either up or to the left so that they would become inaccessible.
