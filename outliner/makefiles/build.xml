<?xml version="1.0" encoding="UTF-8"?>
<project basedir="../" default="all" name="JOE - Java Outline Editor">
	<!-- TBD:
		1) Add a "release" target that makes a clean outliner directory and then if possible, a tar.gz file.
	-->
	<!-- initialize -->
		<!-- Set properties for this build -->
			<property name="src" value="src"/>
			<property name="src-outliner" value="${src}/com/organic/maynard/outliner"/>
			<property name="src-maynard" value="${src}/com/organic/maynard"/>
			<property name="src-webfilephp" value="${src}/com/yearahead"/>
			<property name="src-wikiff" value="${src}/com/psm/wiki"/>
			<property name="lib" value="lib"/>
		<target name="init">
			<tstamp/>
		</target>
	<!-- HELP MESSAGE -->
		<target name="help" description="Prints a help message to the console">
			<echo><![CDATA[
Useage: ant <target>
Targets:
                 help: Prints this help message to the console.
                  jar: Cleans, compiles, and jars all everything 
		       for JOE.
              javadoc: Generates source code documentation in the 
	               javadoc format.

		 init: Sets a timestamp.

       clean-outliner: Removes all .class files for the outliner src tree.
     compile-outliner: Compiles all class files for the outliner src tree.
         jar-outliner: Creates outliner.jar

     clean-webfilephp: Removes all .class files for the webfilephp src tree.
   compile-webfilephp: Compiles all class files for the webfilephp src tree.
       jar-webfilephp: Creates com.yearahead.io.webfile.jar

         clean-wikiff: Removes all .class files for the wikiff src tree.
       compile-wikiff: Compiles all class files for the wikiff src tree.
           jar-wikiff: Creates com.psm.wiki.jar

        clean-maynard: Removes all .class files for the maynard src tree.
      compile-maynard: Compiles all class files for the maynard src tree.
          jar-maynard: Creates com.organic.maynard.jar
			]]></echo>
		</target>
	<!-- GLOBAL TARGETS -->
		<target name="jar" depends="init" description="Cleans, compiles, and jars everything for JOE.">
			<antcall target="jar-maynard"/>
			<antcall target="jar-outliner"/>
			<antcall target="jar-webfilephp"/>
			<antcall target="jar-wikiff"/>
		</target>
		<target name="javadoc" depends="init" description="Generates source code documentation in the javadoc format.">
			<delete dir="dox/api"/>
			<mkdir  dir="dox/api"/>
			<javadoc packagenames="com.*, gui.*"
				sourcepath="src"
				destdir="dox/api"
				author="true"
				version="true"
				use="true"
				windowtitle="Java Outline Editor (JOE) API"
			>
				<classpath>
					<pathelement path="${lib}/bsh.jar"/>
					<pathelement path="${lib}/com.organic.maynard.jar"/>
					<pathelement path="${lib}/com.yearahead.io.webfile.jar"/>
					<pathelement path="${lib}/xmlrpc.jar"/>
					<pathelement path="${lib}/jakarta-oro.jar"/>
					<pathelement path="${lib}/sax.jar"/>
					<pathelement path="${lib}/xp.jar"/>
					<pathelement path="${lib}/jazzy-core.jar"/>
				</classpath>
			</javadoc>
		</target>
	<!-- webfilephp TARGETS -->
		<target name="compile-webfilephp" depends="init, clean-webfilephp" description="Compiles all class files for the webfilephp src tree.">
			<javac debug="false" optimize="true" deprecation="false" srcdir="${src-webfilephp}">
				<classpath>
					<pathelement path="${lib}/com.organic.maynard.jar"/>
					<pathelement path="${lib}/outliner.jar"/>
					<pathelement path="${lib}/sax.jar"/>
				</classpath>
			</javac>
		</target>
		<target name="jar-webfilephp" depends="compile-webfilephp" description="Creates com.yearahead.io.webfile.jar">
			<jar basedir="${src}" compress="true" jarfile="${lib}/com.yearahead.io.webfile.jar">
				<include name="com/yearahead/**"/>
				<exclude name="**/*.java"/>
			</jar>
		</target>
		<target name="clean-webfilephp" description="Removes all .class files for the webfilephp src tree.">
			<delete>
				<fileset dir="${src-webfilephp}">
					<include name="**/*.class"/>
				</fileset>
			</delete>
		</target>
	<!-- wikiff TARGETS -->
		<target name="compile-wikiff" depends="init, clean-wikiff" description="Compiles all class files for the wikiff src tree.">
			<javac debug="false" optimize="true" deprecation="false" srcdir="${src-wikiff}">
				<classpath>
					<pathelement path="${lib}/com.organic.maynard.jar"/>
					<pathelement path="${lib}/outliner.jar"/>
					<pathelement path="${lib}/sax.jar"/>
				</classpath>
			</javac>
		</target>
		<target name="jar-wikiff" depends="compile-wikiff" description="Creates com.psm.wiki.jar">
			<jar basedir="${src}" compress="true" jarfile="${lib}/com.psm.wiki.jar">
				<include name="com/psm/wiki/**"/>
				<exclude name="**/*.java"/>
			</jar>
		</target>
		<target name="clean-wikiff" description="Removes all .class files for the wikiff src tree.">
			<delete>
				<fileset dir="${src-wikiff}">
					<include name="**/*.class"/>
				</fileset>
			</delete>
		</target>
	<!-- maynard TARGETS -->
		<target name="compile-maynard" depends="init, clean-maynard" description="Compiles all class files for the maynard src tree.">
			<javac debug="false" optimize="true" deprecation="false" srcdir="${src-maynard}">
				<classpath>
					<pathelement path="${lib}/bsh.jar"/>
					<pathelement path="${lib}/xmlrpc.jar"/>
					<pathelement path="${lib}/jakarta-oro.jar"/>
					<pathelement path="${lib}/sax.jar"/>
					<pathelement path="${lib}/xerces.jar"/>
					<pathelement path="${lib}/xp.jar"/>
					<pathelement path="${lib}/outliner.jar"/>
				</classpath>
				<exclude name="outliner/**"/>
			</javac>
		</target>
		<target name="jar-maynard" depends="compile-maynard" description="Creates com.organic.maynard.jar">
			<jar basedir="${src}" compress="true" jarfile="${lib}/com.organic.maynard.jar">
				<exclude name="com/organic/maynard/outliner/**"/>
				<exclude name="**/*.java"/>
				<exclude name="graphics/**"/>
			</jar>
		</target>
		<target name="clean-maynard" description="Removes all .class files for the maynard src tree.">
			<delete>
				<fileset dir="${src-maynard}">
					<exclude name="outliner/**"/>
					<include name="**/*.class"/>
				</fileset>
			</delete>
		</target>
	<!-- outliner TARGETS -->
		<target name="compile-outliner" depends="init, clean-outliner" description="Compiles all class files for the outliner src tree.">
			<javac debug="true" optimize="true" deprecation="false" srcdir="${src-outliner}">
				<classpath>
					<pathelement path="${lib}/bsh.jar"/>
					<pathelement path="${lib}/com.organic.maynard.jar"/>
					<pathelement path="${lib}/com.yearahead.io.webfile.jar"/>
					<pathelement path="${lib}/xmlrpc.jar"/>
					<pathelement path="${lib}/jakarta-oro.jar"/>
					<pathelement path="${lib}/sax.jar"/>
					<pathelement path="${lib}/xp.jar"/>
					<pathelement path="${lib}/jazzy-core.jar"/>
				</classpath>
			</javac>
		</target>
		<target name="jar-outliner" depends="compile-outliner" description="Creates outliner.jar">
			<jar basedir="${src}" compress="true" jarfile="${lib}/outliner.jar">
				<include name="com/organic/maynard/outliner/**"/>
				<include name="graphics/**"/>
				<exclude name="**/*.java"/>
			</jar>
		</target>
		<target name="clean-outliner" description="Removes all .class files for the outliner src tree.">
			<delete>
				<fileset dir="${src-outliner}">
					<include name="**/*.class"/>
				</fileset>
			</delete>
		</target>
	</project>
